% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/new_factory.R
\name{new_factory}
\alias{new_factory}
\title{Create a new report factory}
\usage{
new_factory(
  name = "new_factory",
  path = ".",
  include_template = TRUE,
  move_in = TRUE
)
}
\arguments{
\item{name}{the name of the report factory folder to be created.}

\item{path}{the folder where the report factory should be created.  This
will default to the current working directory.}

\item{include_template}{a logical indicating if a template of report
and folders structure shoud be added to the factory; defaults to `TRUE`}

\item{move_in}{a `logical` indicating if the current session should move into
the created factory; defaults to `TRUE`}
}
\value{
the report factory folder location (invisibly)
}
\description{
This function can be used to create a new report factory. By default, the
factory is created with a template of report, and the working environment is
moved to the newly created factory.
}
\details{
`new_factory` will create a report factory folder structure that includes:

* `report_sources`: a folder storing the reports, named after the convention
  described in `update_reports()`.
* `.gitignore`: a file used to tell git to ignore the produced outputs in
  `report_outputs()`.
* `open.Rproj`: an Rproject file to open the factory when using Rstudio.
* `.here`: an empty file used as an anchor by `here::here()`.
* `README.md`: instructions on how to use report factory

If `include_template` is TRUE, then the factory will also include:

* `data/raw/`: a folder storing raw data
* `data/clean/`: a folder storing cleaned data
* `R/`: a folder to store additional code that may be called in reports
}
\examples{
\dontshow{.old_wd <- setwd(tempdir())}
f1 <- new_factory("new_factory_1", move_in = FALSE)
f2 <- new_factory("new_factory_2", include_template = FALSE, move_in = TRUE)
\dontshow{
unlink(f1, recursive = TRUE)
unlink(f2, recursive = TRUE)
setwd(.old_wd)
}
}
